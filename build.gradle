buildscript {
	ext {
		springBootVersion = '2.4.4'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id 'maven-publish'
}

group = 'com.priya'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		// Configuration required by lombok
		extendsFrom annotationProcessor
	}
}


repositories {
	mavenCentral()
}

dependencies {
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.4.4'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.hibernate:hibernate-core:5.2.17.Final'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	implementation 'org.javassist:javassist:3.25.0-GA'
	//implementation 'mysql:mysql-connector-java:5.1.49'
	implementation 'mysql:mysql-connector-java:8.0.25'

	// Test dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testRuntimeOnly 'org.junit.platform:junit-platform-commons'
	testRuntimeOnly 'com.h2database:h2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter:5.4.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.4.0'
	testRuntimeOnly 'org.mockito:mockito-junit-jupiter:2.23.0'
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport

	jacoco {
		enabled = true
	}
}

jacocoTestReport {
	dependsOn test
	executionData(test)

	reports {
		html.enabled = true
		html.destination file("${buildDir}/jacocoHtml")

		xml.enabled = true
		xml.destination = file("${buildDir}/jacoco/test.xml")

		csv.enabled = true
	}
}

jacocoTestCoverageVerification {
	executionData(test)
	violationRules {
		rule {
			limit {
				minimum = 0.8
			}
		}
	}
}


println System.getenv('CODEARTIFACT_REPO')
println System.getenv('CODEARTIFACT_TOKEN')

publishing {
	publications {
		bootJava(MavenPublication) {
			artifact bootJar
		}
	}

	repositories {
		maven {
			url System.getenv('CODEARTIFACT_REPO')
			credentials {
				username "aws"
				password System.getenv('CODEARTIFACT_TOKEN')
			}
		}
	}
}

